{"ast":null,"code":"import _toConsumableArray from\"/Users/paulaalvarez/Desktop/Adalab/evaluacio\\u0301n-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/paulaalvarez/Desktop/Adalab/evaluacio\\u0301n-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//IMPORTS\nimport\"../styles/App.scss\";import adalabersList from\"../data/adalabers.json\";import{useEffect,useState}from\"react\";import callToApi from\"../services/api\";//import { useState } from \"react\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//CONSTANTES\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];//datos de las adalabers. Inicialmente el json. Ahora en fetch\n//función effect para fetch\nuseEffect(function(){// Dentro de useEffect llamamos al API\ncallToApi().then(function(response){// Cuando el API responde guardamos los datos en el estado para que se re-renderice el componente\nsetData(response);});// Aquí ponemos un array vacío porque queremos que se llame al API solo la primera vez\n},[]);//FUNCIONES MANEJADORAS\n//funciones para añadir una nueva adalaber\nvar handleNewName=function handleNewName(ev){setName(ev.currentTarget.value);};var handleNewCounselor=function handleNewCounselor(ev){setCounselor(ev.currentTarget.value);};var handleNewSpeciality=function handleNewSpeciality(ev){setSpeciality(ev.currentTarget.value);};//variables de estado para los inputs de crear nuevo contacto\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),counselor=_useState6[0],setCounselor=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),speciality=_useState8[0],setSpeciality=_useState8[1];//función manejadora del botón añadir una nueva Adalaber\nvar handleClick=function handleClick(ev){ev.preventDefault();var newAdalaber={name:name,counselor:counselor,speciality:speciality};console.log(newAdalaber);setData([].concat(_toConsumableArray(data),[newAdalaber]));};//función para pintar la lista de adalabers recorriendo el array adalabersList(data), con map\nvar htmlAdalaber=data.map(function(eachAdalaber,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:eachAdalaber.name}),/*#__PURE__*/_jsx(\"td\",{children:eachAdalaber.counselor}),/*#__PURE__*/_jsx(\"td\",{children:eachAdalaber.speciality})]},index);});//RETURN\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Adalabers\"})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tutora\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Especialidad\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:htmlAdalaber})]}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"A\\xF1adir una Adalaber\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",id:\"name\",placeholder:\"Nombre\",onChange:handleNewName,value:name}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"counselor\",id:\"counselor\",placeholder:\"Tutora\",onChange:handleNewCounselor,value:counselor}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"speciality\",id:\"speciality\",placeholder:\"Especialidad\",onChange:handleNewSpeciality,value:speciality}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"A\\xF1adir una nueva Adalaber\",onClick:handleClick})]})]})]});}export default App;","map":{"version":3,"sources":["/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/components/App.js"],"names":["adalabersList","useEffect","useState","callToApi","App","data","setData","then","response","handleNewName","ev","setName","currentTarget","value","handleNewCounselor","setCounselor","handleNewSpeciality","setSpeciality","name","counselor","speciality","handleClick","preventDefault","newAdalaber","console","log","htmlAdalaber","map","eachAdalaber","index"],"mappings":"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","sourcesContent":["//IMPORTS\n\nimport \"../styles/App.scss\";\nimport adalabersList from \"../data/adalabers.json\";\nimport { useEffect, useState } from \"react\";\nimport callToApi from \"../services/api\";\n\n//import { useState } from \"react\";\n\nfunction App() {\n  //CONSTANTES\n  const [data, setData] = useState([]); //datos de las adalabers. Inicialmente el json. Ahora en fetch\n  //función effect para fetch\n\n  useEffect(() => {\n    // Dentro de useEffect llamamos al API\n    callToApi().then((response) => {\n      // Cuando el API responde guardamos los datos en el estado para que se re-renderice el componente\n      setData(response);\n    });\n    // Aquí ponemos un array vacío porque queremos que se llame al API solo la primera vez\n  }, []);\n\n  //FUNCIONES MANEJADORAS\n\n  //funciones para añadir una nueva adalaber\n  const handleNewName = (ev) => {\n    setName(ev.currentTarget.value);\n  };\n  const handleNewCounselor = (ev) => {\n    setCounselor(ev.currentTarget.value);\n  };\n\n  const handleNewSpeciality = (ev) => {\n    setSpeciality(ev.currentTarget.value);\n  };\n  //variables de estado para los inputs de crear nuevo contacto\n  const [name, setName] = useState(\"\");\n  const [counselor, setCounselor] = useState(\"\");\n  const [speciality, setSpeciality] = useState(\"\");\n\n  //función manejadora del botón añadir una nueva Adalaber\n  const handleClick = (ev) => {\n    ev.preventDefault();\n    const newAdalaber = {\n      name: name,\n      counselor: counselor,\n      speciality: speciality,\n    };\n    console.log(newAdalaber);\n    setData([...data, newAdalaber]);\n  };\n  //función para pintar la lista de adalabers recorriendo el array adalabersList(data), con map\n\n  const htmlAdalaber = data.map((eachAdalaber, index) => {\n    return (\n      <tr key={index}>\n        <td>{eachAdalaber.name}</td>\n        <td>{eachAdalaber.counselor}</td>\n        <td>{eachAdalaber.speciality}</td>\n      </tr>\n    );\n  });\n  //RETURN\n\n  return (\n    <div className=\"page\">\n      {/* header */}\n      <header>\n        <h1>Adalabers</h1>\n      </header>\n      {/* main */}\n      <main>\n        <table>\n          {/*Fila de cabecera */}\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Tutora</th>\n              <th>Especialidad</th>\n            </tr>\n          </thead>\n\n          {/*Fin fila de cabecera */}\n          <tbody>\n            {/*Primera fila */}\n            {htmlAdalaber}\n            {/*Segunda fila */}\n          </tbody>\n        </table>\n        <form>\n          <h2>Añadir una Adalaber</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Nombre\"\n            onChange={handleNewName}\n            value={name}\n          ></input>\n          <input\n            type=\"text\"\n            name=\"counselor\"\n            id=\"counselor\"\n            placeholder=\"Tutora\"\n            onChange={handleNewCounselor}\n            value={counselor}\n          ></input>\n          <input\n            type=\"text\"\n            name=\"speciality\"\n            id=\"speciality\"\n            placeholder=\"Especialidad\"\n            onChange={handleNewSpeciality}\n            value={speciality}\n          ></input>\n          <input\n            type=\"submit\"\n            value=\"Añadir una nueva Adalaber\"\n            onClick={handleClick}\n          ></input>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}