{"ast":null,"code":"var _jsxFileName = \"/Users/paulaalvarez/Desktop/Adalab/evaluacio\\u0301n-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/components/App.js\",\n    _s = $RefreshSig$();\n\n//IMPORTS\nimport \"../styles/App.scss\";\nimport adalabersList from \"../data/adalabers.json\";\nimport { useEffect, useState } from \"react\";\nimport callToApi from \"../services/api\"; //import { useState } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //CONSTANTES\n  const [data, setData] = useState([]); //datos de las adalabers. Inicialmente el json. Ahora en fetch\n  //función effect para fetch\n\n  useEffect(() => {\n    // Dentro de useEffect llamamos al API\n    callToApi().then(response => {\n      // Cuando el API responde guardamos los datos en el estado para que se re-renderice el componente\n      setData(response);\n    }); // Aquí ponemos un array vacío porque queremos que se llame al API solo la primera vez\n  }, []); //FUNCIONES MANEJADORAS\n  //variable de estado de la búsqueda de la usuaria\n\n  const [search, setSearch] = useState(\"\"); //función para buscar\n\n  const handleSearchChange = ev => {\n    setSearch(ev.currentTarget.value);\n  }; //funciones para añadir una nueva adalaber\n\n\n  const handleNewName = ev => {\n    setName(ev.currentTarget.value);\n  };\n\n  const handleNewCounselor = ev => {\n    setCounselor(ev.currentTarget.value);\n  };\n\n  const handleNewSpeciality = ev => {\n    setSpeciality(ev.currentTarget.value);\n  }; //variables de estado para los inputs de crear nuevo contacto\n\n\n  const [name, setName] = useState(\"\");\n  const [counselor, setCounselor] = useState(\"\");\n  const [speciality, setSpeciality] = useState(\"\"); //función manejadora del botón añadir una nueva Adalaber\n\n  const handleClick = ev => {\n    ev.preventDefault();\n    const newAdalaber = {\n      name: name,\n      counselor: counselor,\n      speciality: speciality\n    };\n    setData([...data, newAdalaber]);\n    setName(\"\");\n    setCounselor(\"\");\n    setSpeciality(\"\");\n  }; //función para pintar la lista de adalabers recorriendo el array adalabersList(data), con map\n\n\n  const htmlAdalaber = data.map((eachAdalaber, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: eachAdalaber.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: eachAdalaber.counselor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: eachAdalaber.speciality\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }); //RETURN\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Adalabers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"search\",\n          placeholder: \"Ej.MariCarmen\",\n          onChange: handleSearchChange,\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tutora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Especialidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: htmlAdalaber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir una Adalaber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          placeholder: \"Nombre\",\n          onChange: handleNewName,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"counselor\",\n          id: \"counselor\",\n          placeholder: \"Tutora\",\n          onChange: handleNewCounselor,\n          value: counselor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"speciality\",\n          id: \"speciality\",\n          placeholder: \"Especialidad\",\n          onChange: handleNewSpeciality,\n          value: speciality\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"A\\xF1adir una nueva Adalaber\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZT4fMVLiqD01mF9srEFaGU1vB8w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/components/App.js"],"names":["adalabersList","useEffect","useState","callToApi","App","data","setData","then","response","search","setSearch","handleSearchChange","ev","currentTarget","value","handleNewName","setName","handleNewCounselor","setCounselor","handleNewSpeciality","setSpeciality","name","counselor","speciality","handleClick","preventDefault","newAdalaber","htmlAdalaber","map","eachAdalaber","index"],"mappings":"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","sourcesContent":["//IMPORTS\n\nimport \"../styles/App.scss\";\nimport adalabersList from \"../data/adalabers.json\";\nimport { useEffect, useState } from \"react\";\nimport callToApi from \"../services/api\";\n\n//import { useState } from \"react\";\n\nfunction App() {\n  //CONSTANTES\n  const [data, setData] = useState([]); //datos de las adalabers. Inicialmente el json. Ahora en fetch\n  //función effect para fetch\n\n  useEffect(() => {\n    // Dentro de useEffect llamamos al API\n    callToApi().then((response) => {\n      // Cuando el API responde guardamos los datos en el estado para que se re-renderice el componente\n      setData(response);\n    });\n    // Aquí ponemos un array vacío porque queremos que se llame al API solo la primera vez\n  }, []);\n\n  //FUNCIONES MANEJADORAS\n  //variable de estado de la búsqueda de la usuaria\n  const [search, setSearch] = useState(\"\");\n  //función para buscar\n  const handleSearchChange = (ev) => {\n    setSearch(ev.currentTarget.value);\n  };\n  //funciones para añadir una nueva adalaber\n  const handleNewName = (ev) => {\n    setName(ev.currentTarget.value);\n  };\n  const handleNewCounselor = (ev) => {\n    setCounselor(ev.currentTarget.value);\n  };\n\n  const handleNewSpeciality = (ev) => {\n    setSpeciality(ev.currentTarget.value);\n  };\n  //variables de estado para los inputs de crear nuevo contacto\n  const [name, setName] = useState(\"\");\n  const [counselor, setCounselor] = useState(\"\");\n  const [speciality, setSpeciality] = useState(\"\");\n\n  //función manejadora del botón añadir una nueva Adalaber\n  const handleClick = (ev) => {\n    ev.preventDefault();\n    const newAdalaber = {\n      name: name,\n      counselor: counselor,\n      speciality: speciality,\n    };\n    setData([...data, newAdalaber]);\n    setName(\"\");\n    setCounselor(\"\");\n    setSpeciality(\"\");\n  };\n  //función para pintar la lista de adalabers recorriendo el array adalabersList(data), con map\n\n  const htmlAdalaber = data.map((eachAdalaber, index) => {\n    return (\n      <tr key={index}>\n        <td>{eachAdalaber.name}</td>\n        <td>{eachAdalaber.counselor}</td>\n        <td>{eachAdalaber.speciality}</td>\n      </tr>\n    );\n  });\n  //RETURN\n\n  return (\n    <div className=\"page\">\n      {/* header */}\n      <header>\n        <h1>Adalabers</h1>\n        <form>\n          <input\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"Ej.MariCarmen\"\n            onChange={handleSearchChange}\n            value={search}\n          />\n        </form>\n      </header>\n      {/* main */}\n      <main>\n        <table>\n          {/*Fila de cabecera */}\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Tutora</th>\n              <th>Especialidad</th>\n            </tr>\n          </thead>\n\n          {/*Fin fila de cabecera */}\n          <tbody>\n            {/*Primera fila */}\n            {htmlAdalaber}\n            {/*Segunda fila */}\n          </tbody>\n        </table>\n        <form>\n          <h2>Añadir una Adalaber</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Nombre\"\n            onChange={handleNewName}\n            value={name}\n          ></input>\n          <input\n            type=\"text\"\n            name=\"counselor\"\n            id=\"counselor\"\n            placeholder=\"Tutora\"\n            onChange={handleNewCounselor}\n            value={counselor}\n          ></input>\n          <input\n            type=\"text\"\n            name=\"speciality\"\n            id=\"speciality\"\n            placeholder=\"Especialidad\"\n            onChange={handleNewSpeciality}\n            value={speciality}\n          ></input>\n          <input\n            type=\"submit\"\n            value=\"Añadir una nueva Adalaber\"\n            onClick={handleClick}\n          ></input>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}