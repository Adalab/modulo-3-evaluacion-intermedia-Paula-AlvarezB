[{"/Users/paulaalvarez/Desktop/Adalab/Modulo3-react/react-starter-kit/src/index.js":"1","/Users/paulaalvarez/Desktop/Adalab/Modulo3-react/react-starter-kit/src/components/App.js":"2","/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/index.js":"3","/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/components/App.js":"4","/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/services/api.js":"5"},{"size":167,"mtime":1641841624679,"results":"6","hashOfConfig":"7"},{"size":148,"mtime":1641841696410,"results":"8","hashOfConfig":"7"},{"size":157,"mtime":1642438758622,"results":"9","hashOfConfig":"10"},{"size":4058,"mtime":1642500453501,"results":"11","hashOfConfig":"10"},{"size":311,"mtime":1642497609780,"results":"12","hashOfConfig":"10"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xun8fa",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1bm2vdv",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/paulaalvarez/Desktop/Adalab/Modulo3-react/react-starter-kit/src/index.js",[],"/Users/paulaalvarez/Desktop/Adalab/Modulo3-react/react-starter-kit/src/components/App.js",[],"/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/index.js",[],["25","26"],"/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/components/App.js",["27"],"//IMPORTS\n\nimport \"../styles/App.scss\";\nimport adalabersList from \"../data/adalabers.json\";\nimport { useEffect, useState } from \"react\";\nimport callToApi from \"../services/api\";\n\n//import { useState } from \"react\";\n\nfunction App() {\n  //CONSTANTES\n  const [data, setData] = useState([]); //datos de las adalabers. Inicialmente el json. Ahora en fetch\n  //función effect para fetch\n\n  useEffect(() => {\n    // Dentro de useEffect llamamos al API\n    callToApi().then((response) => {\n      // Cuando el API responde guardamos los datos en el estado para que se re-renderice el componente\n      setData(response);\n    });\n    // Aquí ponemos un array vacío porque queremos que se llame al API solo la primera vez\n  }, []);\n\n  //FUNCIONES MANEJADORAS\n  //variable de estado de la búsqueda de la usuaria\n  const [search, setSearch] = useState(\"\");\n  //función para buscar\n  const handleSearchChange = (ev) => {\n    setSearch(ev.currentTarget.value);\n  };\n  //funciones para añadir una nueva adalaber\n  const handleNewName = (ev) => {\n    setName(ev.currentTarget.value);\n  };\n  const handleNewCounselor = (ev) => {\n    setCounselor(ev.currentTarget.value);\n  };\n\n  const handleNewSpeciality = (ev) => {\n    setSpeciality(ev.currentTarget.value);\n  };\n  //variables de estado para los inputs de crear nuevo contacto\n  const [name, setName] = useState(\"\");\n  const [counselor, setCounselor] = useState(\"\");\n  const [speciality, setSpeciality] = useState(\"\");\n\n  //función manejadora del botón añadir una nueva Adalaber\n  const handleClick = (ev) => {\n    ev.preventDefault();\n    const newAdalaber = {\n      name: name,\n      counselor: counselor,\n      speciality: speciality,\n    };\n    setData([...data, newAdalaber]);\n    setName(\"\");\n    setCounselor(\"\");\n    setSpeciality(\"\");\n  };\n\n  //función para filtrar el listado en función de la búsqueda de la usuaria\n\n  const filterAdalabers = data.filter((oneAdalaber) =>\n    oneAdalaber.name.toLowerCase().includes(search.toLowerCase())\n  );\n  //función para pintar la lista de adalabers recorriendo el array adalabersList(data), con map\n\n  const htmlAdalaber = filterAdalabers.map((eachAdalaber, index) => {\n    return (\n      <tr key={index}>\n        <td>{eachAdalaber.name}</td>\n        <td>{eachAdalaber.counselor}</td>\n        <td>{eachAdalaber.speciality}</td>\n      </tr>\n    );\n  });\n  //RETURN\n\n  return (\n    <div className=\"page\">\n      {/* header */}\n      <header>\n        <h1>Adalabers</h1>\n        <form>\n          <input\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"Ej.MariCarmen\"\n            onChange={handleSearchChange}\n            value={search}\n          />\n        </form>\n      </header>\n      {/* main */}\n      <main>\n        <table>\n          {/*Fila de cabecera */}\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Tutora</th>\n              <th>Especialidad</th>\n            </tr>\n          </thead>\n\n          {/*Fin fila de cabecera */}\n          <tbody>\n            {/*Primera fila */}\n            {htmlAdalaber}\n            {/*Segunda fila */}\n          </tbody>\n        </table>\n        <form>\n          <h2>Añadir una Adalaber</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Nombre\"\n            onChange={handleNewName}\n            value={name}\n          ></input>\n          <input\n            type=\"text\"\n            name=\"counselor\"\n            id=\"counselor\"\n            placeholder=\"Tutora\"\n            onChange={handleNewCounselor}\n            value={counselor}\n          ></input>\n          <input\n            type=\"text\"\n            name=\"speciality\"\n            id=\"speciality\"\n            placeholder=\"Especialidad\"\n            onChange={handleNewSpeciality}\n            value={speciality}\n          ></input>\n          <input\n            type=\"submit\"\n            value=\"Añadir una nueva Adalaber\"\n            onClick={handleClick}\n          ></input>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/paulaalvarez/Desktop/Adalab/evaluación-intermedia-3/modulo-3-evaluacion-intermedia-Paula-AlvarezB/src/services/api.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":21},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'adalabersList' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]